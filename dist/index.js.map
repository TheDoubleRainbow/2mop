{"version":3,"sources":["../index.js"],"names":["app","root","path","join","__dirname","server","http","createServer","use","express","static","origin","bodyParser","json","limit","config","bodyLimit","passport","initialize","api","listen","process","env","PORT","port","logger","info","address"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,MAAM,wBAAZ;AACA,IAAMC,OAAOC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,IAArB,EAA2B,QAA3B,EAAqC,MAArC,CAAb;;AAEAJ,IAAIK,MAAJ,GAAaC,eAAKC,YAAL,CAAkBP,GAAlB,CAAb;;AAEAA,IAAIQ,GAAJ,CAAQC,kBAAQC,MAAR,CAAeT,IAAf,CAAR;AACA;;AAEAD,IAAIQ,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACA;AACAR,IAAIQ,GAAJ,CAAQ,oBAAK,EAACG,QAAQ,GAAT,EAAL,CAAR;AACAX,IAAIQ,GAAJ,CAAQI,qBAAWC,IAAX,CAAgB,EAAEC,OAAQC,iBAAOC,SAAjB,EAAhB,CAAR;;AAEA,kBAAa,YAAM;AAClBhB,KAAIQ,GAAJ,CAAQS,mBAASC,UAAT,EAAR;;AAEA,yBAAmBD,kBAAnB;;AAEAjB,KAAIQ,GAAJ,CAAQ,MAAR,EAAgBW,aAAhB;AACAnB,KAAIK,MAAJ,CAAWe,MAAX,CAAkBC,QAAQC,GAAR,CAAYC,IAAZ,IAAoBR,iBAAOS,IAA7C,EAAmD,YAAM;AACxDC,eAAOC,IAAP,sBAA+B1B,IAAIK,MAAJ,CAAWsB,OAAX,GAAqBH,IAApD;AACA,EAFD;AAGA,CATD;;kBAWexB,G","file":"index.js","sourcesContent":["import bodyParser from 'body-parser';\nimport cors from 'cors';\nimport express from 'express';\nimport path from 'path';\nimport http from 'http';\nimport morgan from 'morgan';\nimport passport from 'passport';\nimport { logger } from './lib/util';\nimport api from './api';\nimport config from './config';\nimport initializeDb from './db';\nimport passportMiddleware from './middleware/passport';\nimport fallback from 'express-history-api-fallback'\n\nconst app = express();\nconst root = path.join(__dirname, '..', 'client', 'dist');\n\napp.server = http.createServer(app);\n\napp.use(express.static(root));\n//app.use(fallback('index.html', { root }))\n\napp.use(morgan('dev'));\n//app.use(cors({ exposedHeaders: config.corsHeaders }));\napp.use(cors({origin: \"*\"}));\napp.use(bodyParser.json({ limit : config.bodyLimit }));\n\ninitializeDb(() => {\n\tapp.use(passport.initialize());\n\t\n\tpassportMiddleware(passport);\n\n\tapp.use('/api', api);\n\tapp.server.listen(process.env.PORT || config.port, () => {\n\t\tlogger.info(`Started on port ${app.server.address().port}`);\n\t});\n});\n\nexport default app;\n"]}
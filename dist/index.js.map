{"version":3,"sources":["../index.js"],"names":["app","server","http","createServer","use","express","static","path","join","__dirname","bodyParser","json","limit","config","bodyLimit","console","log","passport","initialize","api","listen","process","env","PORT","port","logger","info","address"],"mappings":";;;;;;AAAA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAVA;AAYA,IAAMA,MAAM,wBAAZ;;AAEAA,IAAIC,MAAJ,GAAaC,eAAKC,YAAL,CAAkBH,GAAlB,CAAb;;AAEAA,IAAII,GAAJ,CAAQC,kBAAQC,MAAR,CAAeC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,IAArB,EAA2B,QAA3B,EAAqC,MAArC,CAAf,CAAR;;AAEAT,IAAII,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACA;AACAJ,IAAII,GAAJ,CAAQM,qBAAWC,IAAX,CAAgB,EAAEC,OAAQC,iBAAOC,SAAjB,EAAhB,CAAR;;AAEAC,QAAQC,GAAR,CAAYT,eAAKC,IAAL,CAAUC,SAAV,EAAqB,IAArB,EAA2B,QAA3B,EAAqC,MAArC,EAA6C,EAA7C,CAAZ;;AAEA,kBAAa,YAAM;AAClBT,KAAII,GAAJ,CAAQa,mBAASC,UAAT,EAAR;;AAEA,yBAAmBD,kBAAnB;;AAEAjB,KAAII,GAAJ,CAAQ,MAAR,EAAgBe,aAAhB;AACAnB,KAAIC,MAAJ,CAAWmB,MAAX,CAAkBC,QAAQC,GAAR,CAAYC,IAAZ,IAAoBV,iBAAOW,IAA7C,EAAmD,YAAM;AACxDC,eAAOC,IAAP,sBAA+B1B,IAAIC,MAAJ,CAAW0B,OAAX,GAAqBH,IAApD;AACA,EAFD;AAGA,CATD;;kBAWexB,G","file":"index.js","sourcesContent":["import bodyParser from 'body-parser';\n//import cors from 'cors';\nimport express from 'express';\nimport path from 'path';\nimport http from 'http';\nimport morgan from 'morgan';\nimport passport from 'passport';\nimport { logger } from './lib/util';\nimport api from './api';\nimport config from './config';\nimport initializeDb from './db';\nimport passportMiddleware from './middleware/passport';\n\nconst app = express();\n\napp.server = http.createServer(app);\n\napp.use(express.static(path.join(__dirname, '..', 'client', 'dist')));\n\napp.use(morgan('dev'));\n//app.use(cors({ exposedHeaders: config.corsHeaders }));\napp.use(bodyParser.json({ limit : config.bodyLimit }));\n\nconsole.log(path.join(__dirname, '..', 'client', 'dist', ''));\n\ninitializeDb(() => {\n\tapp.use(passport.initialize());\n\t\n\tpassportMiddleware(passport);\n\n\tapp.use('/api', api);\n\tapp.server.listen(process.env.PORT || config.port, () => {\n\t\tlogger.info(`Started on port ${app.server.address().port}`);\n\t});\n});\n\nexport default app;\n"]}
{"version":3,"sources":["../db.js"],"names":["env","process","NODE_ENV","options","mongoose","Promise","set","connect","config","host","then","logger","info","callback","catch","error","err","toString"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;;;AAEA,IAAMA,MAAMC,QAAQD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;;AAEA,IAAMC,UAAU,EAAhB;;kBAGe,oBAAY;AAC1BC,oBAASC,OAAT,GAAmBA,kBAAnB;;AAEA,KAAIL,QAAQ,aAAZ,EAA2BI,mBAASE,GAAT,CAAa,OAAb,EAAsB,IAAtB;;AAE3BF,oBAASG,OAAT,CAAiBC,iBAAOC,IAAxB,EACEC,IADF,CACO,YAAM;AACXC,eAAOC,IAAP,CAAY,kBAAZ;;AAEAC,WAAST,kBAAT;AACA,EALF,EAMEU,KANF,CAMQ;AAAA,SAAOH,aAAOI,KAAP,CAAaC,IAAIC,QAAJ,EAAb,CAAP;AAAA,EANR;AAOA,C","file":"db.js","sourcesContent":["import mongoose from 'mongoose';\nimport Promise from 'bluebird';\nimport { logger } from './lib/util';\nimport config from './config';\n\nconst env = process.env.NODE_ENV || 'development';\n\nconst options = {\n};\n\nexport default callback => {\n\tmongoose.Promise = Promise;\n\n\tif (env === 'development') mongoose.set('debug', true);\n\t\n\tmongoose.connect(config.host)\n\t\t.then(() => {\n\t\t\tlogger.info('Mongo connected!');\n\n\t\t\tcallback(mongoose);\n\t\t})\n\t\t.catch(err => logger.error(err.toString()));\n}\n"]}
{"version":3,"sources":["../../middleware/require-auth.js"],"names":["req","res","next","passport","authenticate","err","user","info","console","log","json","status","message","devMessage","end"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;kBAEe,UAACA,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC/B;AACA;AACA;AACA;AACAC,uBAASC,YAAT,CAAsB,KAAtB,EAA6B,UAACC,GAAD,EAAMC,IAAN,EAAYC,IAAZ,EAAqB;AAC9CC,gBAAQC,GAAR,CAAYJ,GAAZ;AACA,YAAIA,GAAJ,EAAS;AAAE,mBAAOH,KAAKG,GAAL,CAAP;AAAmB;AAC9B,YAAI,CAACC,IAAL,EAAW;AACPL,gBAAIS,IAAJ,CAAS;AACLC,wBAAQ,CADH;AAELC,yBAAS,EAFJ;AAGLC,4BAAYN,KAAKK;AAHZ,aAAT;AAKAX,gBAAIa,GAAJ;AACH,SAPD,MAOO;AACHd,gBAAIM,IAAJ,GAAWA,IAAX;AACAJ;AACH;AACJ,KAdD,EAcGF,GAdH,EAcQC,GAdR,EAcaC,IAdb;AAeH,C","file":"require-auth.js","sourcesContent":["import passport from 'passport';\nimport jwt from 'jsonwebtoken';\nimport config from '../config';\n\nexport default (req, res, next) => {\n    // const refreshToken = req.headers[\"authorization\"]\n    // jwt.verify(refreshToken, config.jwtSecret, (err, decoded) => {\n    //     console.log({err, decoded});\n    // })\n    passport.authenticate('jwt', (err, user, info) => {\n        console.log(err);\n        if (err) { return next(err); }\n        if (!user) {\n            res.json({\n                status: 2,\n                message: \"\",\n                devMessage: info.message\n            })\n            res.end();\n        } else {\n            req.user = user;\n            next();\n        }\n    })(req, res, next)\n}\n\n"]}
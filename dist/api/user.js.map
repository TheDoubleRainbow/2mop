{"version":3,"sources":["../../api/user.js"],"names":["router","express","Router","get","res","query","page","parseInt","perPage","que","skill","address","city","skills","RegExp","location","formattedAddress","UserModel","paginate","offset","limit","then","send","status","message","devMessage","data","result","docs","metaData","totalPages","total","currentPage","catch","json","error","toString","userId","params","findById","put","requireAuth","body","user","_id","findByIdAndUpdate","name","avatar","birthDate","description","phoneNumper","desiredWork","portfolio","err","delete","findByIdAndRemove"],"mappings":"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","file":"user.js","sourcesContent":["import resource from 'resource-router-middleware';\nimport { merge, get, isEmpty } from 'lodash/fp';\nimport resMessage from '../lib/res-message';\nimport UserModel from '../models/user';\nimport requireAuth from '../middleware/require-auth';\nimport express from 'express';\nconst router = express.Router();\n\nrouter.get('/', ({query}, res) => {\n\t//UserModel.find({}, {auth_tokens: 0, refresh_tokens: 0}).\n\tconst page = parseInt(query.page || 0);\n\tconst perPage = parseInt(query.perPage || 20);\n\tlet que = {};\n\tconst skill = query.skill;\n\tconst address = query.city\n\tif(skill){\n\t\tque.skills = {\"$in\": [new RegExp(skill, \"i\")]}\n\t}\n\tif(address){\n\t\tque.location = {};\n\t\tque.location.formattedAddress = new RegExp(address, \"i\");\n\t\t//que.location.formattedAddress = address;\n\t}\n\n\tUserModel.paginate(que, {offset: page * perPage , limit: perPage})\n\t\t.then(result => res.send({\n\t\t\tstatus: 0,\n\t\t\tmessage: \"\",\n\t\t\tdevMessage: \"\",\n\t\t\tdata: result.docs,\n\t\t\tmetaData: {\n\t\t\t\ttotalPages: result.total % perPage == 0 ? result.total / perPage : parseInt(result.total / perPage) + 1,\n\t\t\t\tperPage: perPage,\n\t\t\t\tcurrentPage: page\t\t\n\t\t\t}\n\t\t}))\n\t\t.catch(error => res.json({\n\t\t\tstatus: -1,\n\t\t\tmessage: \"\",\n\t\t\tdevMessage: error.toString(),\n\t\t}))\n});\n\nrouter.get('/:userId', ({ params: { userId } }, res) => {\n\tUserModel.findById(userId)\n\t\t.then(result => res.send({\n\t\t\tstatus: 0,\n\t\t\tmessage: \"\",\n\t\t\tdevMessage: \"\",\n\t\t\tdata: result,\n\t\t}))\n\t\t.catch(error => res.json({\n\t\t\tstatus: 6,\n\t\t\tmessage: \"\",\n\t\t\tdevMessage: \"User not found\",\n\t\t}))\n});\n\nrouter.put('/:userId', requireAuth, ({ params: { userId }, body, user }, res) => {\n\tif(userId == user._id){\n\t\tUserModel.findByIdAndUpdate(userId, {name: body.name, avatar: body.avatar, birthDate: body.birthDate, description: body.description, skills: body.skills, phoneNumper: body.phoneNumper, desiredWork: body.desiredWork, portfolio: body.portfolio})\n\t\t\t.then(() => res.json({\n\t\t\t\tstatus: 0,\n\t\t\t\tmessage: \"\",\n\t\t\t\tdevMessage: \"User data update success\",\n\t\t\t}))\n\t\t\t.catch((err) => res.json({\n\t\t\t\tstatus: -1,\n\t\t\t\tmessage: \"\",\n\t\t\t\tdevMessage: err.toString,\n\t\t\t}));\n\t} else {\n\t\tres.json({\n\t\t\tstatus: 7,\n\t\t\tmessage: \"\",\n\t\t\tdevMessage: \"You don't have permissions\",\n\t\t})\n\t}\n})\n\nrouter.delete('/:userId', requireAuth, ({ params: { userId }, body, user }, res) => {\n\tif(userId == user._id){\n\t\tUserModel.findByIdAndRemove(userId)\n\t\t\t.then(() => res.json({\n\t\t\t\tstatus: 0,\n\t\t\t\tmessage: \"\",\n\t\t\t\tdevMessage: \"User successfuly deleted\",\n\t\t\t}))\n\t\t\t.catch((err) => res.json({\n\t\t\t\tstatus: -1,\n\t\t\t\tmessage: \"\",\n\t\t\t\tdevMessage: err.toString,\n\t\t\t}));\n\t} else {\n\t\tres.json({\n\t\t\tstatus: 7,\n\t\t\tmessage: \"\",\n\t\t\tdevMessage: \"You don't have permissions to do it\",\n\t\t})\n\t}\n})\n\nexport default router;\n\n// const userApi = resource({\n// \tid: 'userId',\n\n// \tindex(req, res) {\n// \t\treq.checkAuth();\n// \t\tUserModel.find({}, {auth_tokens: 0, refresh_tokens: 0})\n// \t\t\t.then(result => res.send(result))\n// \t\t\t.catch(error => res.status(400).send(error))\n// \t},\n\n// \tread({ params: { userId } }, res) {\n// \t\tUserModel.findById(userId)\n// \t\t\t.then(result => res.send(result))\n// \t\t\t.catch(() => res.status(404).send(resMessage('User not found.')))\n// \t},\n\n// \tupdate({ params: { userId }, body }, res) {\n// \t\tUserModel.findByIdAndUpdate(userId, body)\n// \t\t\t.then(() => UserModel.findById(userId).then(result => res.send(result)))\n// \t\t\t.catch(() => res.status(404).send(resMessage('User not found.')))\n// \t},\n\n// \tdelete({ params: { userId } }, res) {\n// \t\tUserModel.findByIdAndRemove(userId)\n// \t\t\t.then(() => res.send(resMessage('User successfully deleted!')))\n// \t\t\t.catch(() => res.status(404).send(resMessage('User not found.')))\n// \t}\n// });\n\n// export default userApi;\n"]}
{"version":3,"sources":["../../api/vacancy.js"],"names":["router","express","Router","get","res","query","page","parseInt","perPage","ownerId","VacancyModel","paginate","offset","limit","then","docs","result","docsPromiseArr","forEach","push","Promise","resolve","reject","newDoc","doc","_doc","console","log","_id","ApplyModel","count","eventId","String","applyCount","r","all","json","status","message","devMessage","data","metaData","totalPages","total","currentPage","catch","error","requireAuth","vacancyId","params","user","promiseArr","findOne","applyerId","findById","vacancy","isUserApplyed","post","body","type","name","photo","description","requiredSkills","location","placeId","formattedAddress","types","save","code","a","apply","eventType","put","findOneAndUpdate","new","delete","findOneAndRemove","err"],"mappings":"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","file":"vacancy.js","sourcesContent":["import VacancyModel from '../models/vacancy';\nimport ApplyModel from '../models/apply';\nimport requireAuth from '../middleware/require-auth';\nimport express from 'express';\n//import vacancyModel from '../models/vacancy';\nconst router = express.Router();\n\nrouter.get('/', ({query}, res) => {\n\t//VacancyModel.find({}, {auth_tokens: 0, refresh_tokens: 0}).\n\tconst page = parseInt(query.page || 0);\n    const perPage = parseInt(query.perPage || 20);\n    const ownerId = query.ownerId; \n\tVacancyModel.paginate(ownerId ? {ownerId} : {}, {offset: page * perPage , limit: perPage})\n\t\t.then(result => {\n\t\t\tlet docs = result.docs\n\t\t\tlet docsPromiseArr = [];\n\t\t\tdocs.forEach(doc => {\n\t\t\t\tdocsPromiseArr.push(new Promise((resolve, reject) => {\n\t\t\t\t\tlet newDoc = doc._doc;\n\t\t\t\t\tconsole.log(doc._id);\n\t\t\t\t\tApplyModel.count({eventId: String(doc._id)}).then(r => {\n\t\t\t\t\t\tnewDoc.applyCount = r;\n\t\t\t\t\t\tresolve(newDoc);\n\t\t\t\t\t})\n\t\t\t\t}))\n\t\t\t});\n\t\t\tPromise.all(docsPromiseArr).then(r => {\n\n\t\t\t\tres.json({\n\t\t\t\t\tstatus: 0,\n\t\t\t\t\tmessage: \"\",\n\t\t\t\t\tdevMessage: \"\",\n\t\t\t\t\tdata: r,\n\t\t\t\t\tmetaData: {\n\t\t\t\t\t\ttotalPages: result.total % perPage == 0 ? result.total / perPage : parseInt(result.total / perPage) + 1,\n\t\t\t\t\t\tperPage: perPage,\n\t\t\t\t\t\tcurrentPage: page\t\t\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t\t})\n\t\t.catch(error => res.json({\n\t\t\tstatus: -1,\n\t\t\tmessage: \"\",\n\t\t\tdevMessage: error,\n\t\t}))\n});\n\nrouter.get('/:vacancyId', requireAuth, ({ params: { vacancyId }, user }, res) => {\n\t//ApplyModel.count({eventId: vacancyId}).then(r => res.json({r})).catch( e => res.json({e}));\n\tlet promiseArr = [];\n\tpromiseArr.push(ApplyModel.findOne({applyerId: user._id, eventId: vacancyId}));\n\t//console.log(\"vacancy \", vacancyId)\n\tpromiseArr.push(ApplyModel.count({eventId: vacancyId}));\n\tVacancyModel.findById(vacancyId)\n\t\t.then(result => {\n\t\t\tPromise.all(promiseArr).then( r => {\n\t\t\t\t//let vacancy = Object.assign({}, result)._doc;\n\t\t\t\tlet vacancy = result._doc;\n\t\t\t\tvacancy.applyCount = r[1];\n\t\t\t\tvacancy.isUserApplyed = r[0] == null ? false : true;\n\t\t\t\tres.json({\n\t\t\t\t\tstatus: 0,\n\t\t\t\t\tmessage: \"\",\n\t\t\t\t\tdevMessage: r,\n\t\t\t\t\tdata: vacancy,\n\t\t\t\t})\n\t\t\t});\n\t\t})\n\t\t.catch(error => res.json({\n\t\t\tstatus: -1,\n\t\t\tmessage: \"\",\n\t\t\tdevMessage: \"Vacancy not found\",\n\t\t}))\n});\n\nrouter.post('/', requireAuth, ({body, user}, res) => {\n\tif(user.type == \"company\"){\n\t\tconst vacancy = new VacancyModel({name: body.name, photo: body.photo, description: body.description, ownerId: user._id, requiredSkills: body.requiredSkills, location: {placeId: body.placeId, formattedAddress: body.formattedAddress || \"City Name\"}, types: body.types});\n\t\tvacancy.save()\t\t\t\n\t\t\t.then( () => {\n\t\t\t\tres.json({\n\t\t\t\t\tstatus: 0,\n\t\t\t\t\tmessage: 'Vacancy successfull created',\n\t\t\t\t\tdata: vacancy,\n\t\t\t\t})\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tres.json({\n\t\t\t\t\tstatus: error.code || -1,\n\t\t\t\t\tmessage: \"\",\n\t\t\t\t\t//devMessage: resMessage(error.message)\n\t\t\t\t\tdevMessage: error.message,\n\t\t\t\t})\n\t\t\t})\n\t} else {\n\t\tres.json({\n\t\t\tstatus: 7,\n\t\t\tmessage: \"\",\n\t\t\tdevMessage: \"You don't have permissions to do it\",\n\t\t})\n\t}\n});\n\nrouter.post('/:vacancyId/apply', requireAuth, ({ params: { vacancyId }, user }, res) => {\n\tif(user.type == \"user\"){\n\t\tApplyModel.findOne({applyerId: user._id, eventId: vacancyId}).then( a => {\n\t\t\tif(a != null){\n\t\t\t\tres.json({\n\t\t\t\t\tstatus: -1,\n\t\t\t\t\tmessage: 'You are applyed already',\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tconst apply = new ApplyModel({applyerId: user._id, eventType: \"vacancy\", eventId: vacancyId});\n\t\t\t\tapply.save()\t\t\t\n\t\t\t\t.then( () => {\n\t\t\t\t\tres.json({\n\t\t\t\t\t\tstatus: 0,\n\t\t\t\t\t\tmessage: 'Apply successfull created',\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tres.json({\n\t\t\t\t\t\tstatus: error.code || -1,\n\t\t\t\t\t\tmessage: \"\",\n\t\t\t\t\t\t//devMessage: resMessage(error.message)\n\t\t\t\t\t\tdevMessage: error.message,\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t}\n\t\t});\n\t} else {\n\t\tres.json({\n\t\t\tstatus: 7,\n\t\t\tmessage: \"\",\n\t\t\tdevMessage: \"You don't have permissions to do it\",\n\t\t})\n\t}\n});\n\nrouter.put('/:vacancyId', requireAuth, ({ params: { vacancyId }, body, user }, res) => {\n\t// let updates = {name: body.name, avatar: body.avatar, birthDate: body.birthDate, description: body.description, skills: body.skills, phoneNumper: body.phoneNumper};\n\t// let update = {name: body.name};\n\tVacancyModel.findOneAndUpdate({_id: vacancyId, ownerId: user._id}, {name: body.name, photo: body.photo, description: body.description, ownerId: user._id, requiredSkills: body.requiredSkills, location: {placeId: body.placeId, formattedAddress: body.formattedAddress || \"City Name\"}, types: body.types}, {new: true}).then( doc => {\n\t\tif(doc == null){\n\t\t\tres.json({\n\t\t\t\tstatus: -1,\n\t\t\t\tmessage: \"\",\n\t\t\t\tdevMessage: \"Invalid vacancy id or you do not have permissions\",\n\t\t\t\tdata: doc\n\t\t\t})\n\t\t} else {\n\t\t\tres.json({\n\t\t\t\tstatus: 0,\n\t\t\t\tmessage: \"\",\n\t\t\t\tdevMessage: \"Vacancy successfull update\",\n\t\t\t\tdata: doc\n\t\t\t})\n\t\t}\n\t}).catch( error => {\n\t\tres.json({\n\t\t\tstatus: -1,\n\t\t\tmessage: \"\",\n\t\t\tdevMessage: error,\n\t\t})\n\t});\n})\n\nrouter.delete('/:vacancyId', requireAuth, ({ params: { vacancyId }, user }, res) => {\n//\tif(vacancyId == vacancy._id){\n\t\t//VacancyModel.findByIdAndRemove(vacancyId)\n\t\tVacancyModel.findOneAndRemove({_id: vacancyId, ownerId: user._id})\n\t\t\t.then((result) => {\n\t\t\t\tif(result == null){\n\t\t\t\t\tres.json({\n\t\t\t\t\t\tstatus: 0,\n\t\t\t\t\t\tmessage: \"\",\n\t\t\t\t\t\tdevMessage: \"Invalid vacancy id or you do not have permissions\",\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tres.json({\n\t\t\t\t\t\tstatus: 0,\n\t\t\t\t\t\tmessage: \"\",\n\t\t\t\t\t\tdevMessage: \"Vacancy successfuly deleted\",\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => res.json({\n\t\t\t\tstatus: -1,\n\t\t\t\tmessage: \"\",\n\t\t\t\tdevMessage: err,\n\t\t\t}));\n\t// } else {\n\t// \tres.json({\n\t// \t\tstatus: -1,\n\t// \t\tmessage: \"\",\n\t// \t\tdevMessage: \"You don't have permissions to do it\",\n\t// \t})\n\t// }\n})\n\nexport default router;\n\n"]}